#
# Set up the new machine
#
# Note: copy paste this file in bit by bit. Don't run it.
#
echo "Do not run directly. Press Ctrl-C NOW!"
read -n 1

################################################
# Xcode Command Line Tools
################################################

if ! xcode-select --print-path &> /dev/null; then

    # Prompt user to install the XCode Command Line Tools
    xcode-select --install &> /dev/null

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    # Wait until the XCode Command Line Tools are installed
    until xcode-select --print-path &> /dev/null; do
        sleep 5
    done

    print_result $? 'Install XCode Command Line Tools'

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    # Point the `xcode-select` developer directory to
    # the appropriate directory from within `Xcode.app`
    # https://github.com/alrra/dotfiles/issues/13

    sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer
    print_result $? 'Make "xcode-select" developer directory point to Xcode'

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    # Prompt user to agree to the terms of the Xcode license
    # https://github.com/alrra/dotfiles/issues/10

    sudo xcodebuild -license
    print_result $? 'Agree with the XCode Command Line Tools licence'

fi

################################################
# Homebrew
################################################

/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

# Install backed up formulae
brew tap Homebrew/bundle
(cd .. && brew bundle)

################################################
# Common
################################################

# https://github.com/jamiew/git-friendly
bash < <( curl https://raw.github.com/jamiew/git-friendly/master/install.sh)

# https://github.com/rupa/z
git clone https://github.com/rupa/z.git ~/code/z

# Change to Bash 4 (installed by homebrew)
BASHPATH=$(brew --prefix)/bin/bash 
sudo bash -c 'echo $(brew --prefix)/bin/bash >> /etc/shells'
chsh -s $BASHPATH # will set for current user only.
echo $BASH_VERSION # should be 4.x not the old 3.2.X

# Install WP-CLI
curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
chmod +x wp-cli.phar
sudo mv wp-cli.phar /usr/local/bin/wp

curl -o ../bin/wp-completion.bash https://raw.githubusercontent.com/wp-cli/wp-cli/master/utils/wp-completion.bash

# Install Composer
./install_composer

# Set up macOS defaults
./configure_macos

# move git credentials into ~/.gitconfig.local
# http://stackoverflow.com/a/13615531/89484
# now .gitconfig can be shared across all machines and only the .local changes

# Add symlinks
(cd .. && stow bash)
(cd .. && stow git)
(cd .. && stow composer)


(cd .. && stow -t ~/.gemini gemini)

# add manual symlink for assh config